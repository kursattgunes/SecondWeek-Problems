1-val ile var arasındaki fark nedir?
val'a atılan değerler değiştirilemez, var'a atılan değerler değiştirilebilir.

2-Bir var değişkeni val gibi davranmasını nasıl sağlayabiliriz val kelimesini kullanmadan? Bunu neden yapmak isteriz? Örnek bir senaryo verin.

Bir var değişkeninin val gibi davranmasını set ve get fonksiyonları ile sağlayabiliriz.


3-"Değişmez" (Immutable) ve "Salt Okunur" (ReadOnly) kavramlarını açıklayın. val değişkenler neden aslında "değişmez" değil de "salt okunur" olarak açıklanmalıdır?

Immutable= Bir değerin atandığında değiştirilemeyeceği anlamına gelir.
ReadOnly= Bir değişkenin sadece okunabilir olduğunu ifade eder.Yani sadece değerini alabilirsiniz,ancak yeniden atama yapamazsınız.Kotlinde
val ile atanılan değişkenler sadece 1 kez atanabilir ve sadece okunabilir olarak kabul edilir.

Neden değişmez değil de salt okunur olarak açıklanmalıdır. Val değişkeninin kendisi değişmzedir . Ancak referans ettiği nesnenin içindeki değerler değişebilir. ondan dolayı.
Örneğin  val list=mutableListOf(1,2,3)
list.add(4) // Bu mümkündür çünkü nesnenin içeriği değişiyor.


4-"Tip Çıkarımı" (Type inference) kavramını açıklayın. Hangi durumlarda tip belirtmek kesin olarak gereklidir?
değişken ve ifadelerin tipini otomatik olarak idenin belirlemesi ve anlaması. 

5-"Tip Güvenliği" (Type Safety) kavramını açıklayın.

bir programlama dilinde bir değişkenin tipi belirlendikten sonra (örneğin, bir integer, string veya boolean gibi), 
o değişkenin sadece belirlenen tip ile ilişkilendirilmiş işlemlerde kullanılmasına izin verilir. 

6-Bir değişkeni nullable yapmak için ne yapmalıyız?

Bir değişkeni nullable yapabilmek için sonuna ?. işareti koymalıyız.

7-"Null Güvenliği" (Null Safety) kavramını açıklayın.

"Null Güvenliği" (Null Safety), bir programda değeri olmayan veya atanmamış bir referansın (null) neden olduğu hataları önlemeye yönelik bir programlama kavramıdır






